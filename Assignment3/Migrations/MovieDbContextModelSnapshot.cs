// <auto-generated />
using Assignment3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignment3.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    partial class MovieDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignment3.Models.Domain.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Picture")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Character");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "",
                            FullName = "Ellen Ripley",
                            Gender = "female",
                            Picture = ""
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Ant-Man",
                            FullName = "Scott Lang",
                            Gender = "male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 3,
                            Alias = "",
                            FullName = "Sam Hell",
                            Gender = "male",
                            Picture = ""
                        },
                        new
                        {
                            Id = 4,
                            Alias = "",
                            FullName = "Gilbert Kane",
                            Gender = "male",
                            Picture = ""
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Domain.Franchise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Franchise");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Marvel Cinematic Universe. Contains all Marvel superhero movies that share the same universe.",
                            Name = "MCU"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Donald G. Jackson's movies, set in a post-apocalyptic world where mutant frogs live alongside humans.",
                            Name = "Frogtown"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Movie series built upon Ridley Scott's movie, Alien.",
                            Name = "Alien"
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Domain.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FranchiseId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Trailer")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("FranchiseId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Director = "Donald G. Jackson",
                            FranchiseId = 2,
                            Genre = "Sci-fi",
                            Picture = "http://2.bp.blogspot.com/_5OGIrfjjcc0/TUSI68WDrUI/AAAAAAAACJc/P_eYYNUL3Po/w1200-h630-p-k-no-nu/hell_comes_to_frogtown_c.jpg",
                            ReleaseYear = 1988,
                            Title = "Hell Comes To Frogtown",
                            Trailer = "https://www.youtube.com/watch?v=JUml88mJxyQ"
                        },
                        new
                        {
                            Id = 2,
                            Director = "Ridley Scott",
                            FranchiseId = 3,
                            Genre = "Sci-fi",
                            Picture = "https://media-cache.cinematerial.com/p/500x/qbgrcxaf/alien-movie-cover.jpg?v=1456154180",
                            ReleaseYear = 1979,
                            Title = "Alien",
                            Trailer = "https://youtu.be/LjLamj-b0I8"
                        },
                        new
                        {
                            Id = 3,
                            Director = "James Cameron",
                            FranchiseId = 3,
                            Genre = "Sci-fi",
                            Picture = "https://m.media-amazon.com/images/I/51cAAgWdFfL._AC_.jpg",
                            ReleaseYear = 1986,
                            Title = "Aliens",
                            Trailer = "https://youtu.be/CQMFckAuyEA"
                        },
                        new
                        {
                            Id = 4,
                            Director = "",
                            FranchiseId = 1,
                            Genre = "Superhero",
                            Picture = "https://upload.wikimedia.org/wikipedia/fi/thumb/a/a8/Ant-Man.jpg/250px-Ant-Man.jpg",
                            ReleaseYear = 2015,
                            Title = "Ant-Man",
                            Trailer = "https://youtu.be/UpPx7E27Bc8"
                        });
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.Property<int>("CharactersId")
                        .HasColumnType("int");

                    b.HasKey("MoviesId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("CharacterMovie");

                    b.HasData(
                        new
                        {
                            MoviesId = 2,
                            CharactersId = 1
                        },
                        new
                        {
                            MoviesId = 2,
                            CharactersId = 4
                        },
                        new
                        {
                            MoviesId = 1,
                            CharactersId = 3
                        },
                        new
                        {
                            MoviesId = 4,
                            CharactersId = 2
                        },
                        new
                        {
                            MoviesId = 3,
                            CharactersId = 1
                        });
                });

            modelBuilder.Entity("Assignment3.Models.Domain.Movie", b =>
                {
                    b.HasOne("Assignment3.Models.Domain.Franchise", "Franchise")
                        .WithMany("Movies")
                        .HasForeignKey("FranchiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Franchise");
                });

            modelBuilder.Entity("CharacterMovie", b =>
                {
                    b.HasOne("Assignment3.Models.Domain.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment3.Models.Domain.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment3.Models.Domain.Franchise", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
